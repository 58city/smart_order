var async = require('async');
var http = require('http');
var app = require('../app');
var port = require('../lib/port.lib.js')();
var database = require('../lib/database.lib');
var logger = require('../lib/logger.lib');
var installService = require('../core/services/install.service');
app.set('port', port);
async.waterfall(
    [
        // 检查安装锁，返回布尔值给下一个函数
        function (callback) {
            installService.status(function (err, hasInstall) {
                if (err) return callback(err);
                callback(null, hasInstall);
            });
        },
        // 如果已安装，则连接数据库
        function (hasInstall, callback) {
            if (!hasInstall) {
                return callback();
            }
            database.connect(function(err){
                if(err) return callback(err);
                callback(null);
            })
        }
    ], function (err) {
        if (err) throw err;
        var server = http.createServer(app);
        server.listen(port);
        server.on('error', function (error) {
            if (error.syscall !== 'listen') throw error;
            var bind = typeof port === 'string' ? 'pipe ' + port : 'port ' + port;
            switch (error.code) {
                case 'EACCES':
                    logger.system().error(bind + ' 需要有更高的权限');
                    process.exit(1);
                    break;
                case 'EADDRINUSE':
                    logger.system().error(bind + ' 已被使用');
                    process.exit(1);
                    break;
                default:
                    throw error;
            }
        });
        server.on('listening', function () {
            var addr = server.address();
            var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
            logger.system().info('正在监听 ' + bind);
        });
    }
);